getwd
getwd()
install_if_not_present("LaTeX")
library(flexdashboard)
library(tidyverse)
library(geojsonR)
library(jsonlite)
library(lubridate)
library(leaflet)
library(flexdashboard)
library(shiny)
# create variables for different periodes
past_hours <- "https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/all_hour.geojson"
past_day <- "https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/all_day.geojson"
past_week <- "https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/all_week.geojson"
past_month <- "https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/all_month.geojson"
pipeline <- function(geojson_file) {
# read data from website
dump <- Dump_From_GeoJson(geojson_file)
# convert to JSON
js <- fromJSON(dump)
# # extract metadata
# metadata <- js$metadata
#
# # extract bbox
# bbox <- js$bbox
# bbox <- data.frame(bbox, coord = c("lon_min", "lat_min", "depth_min", "lon_max", "lat_max", "depth_max"))
# extract features
features <- js$features
# extract coordinates
geometry <- features$geometry
coordinates <- geometry$coordinates
coordinates <- do.call(rbind, coordinates)
colnames(coordinates) <- c("lon", "lat", "depth")
# extract properties into a dataframe
properties <- cbind(features$properties, coordinates)
properties <- properties %>% select(mag, place, time, status, updated, type, lon, lat, depth, tsunami, sig, code)
# convert columns time and updated into datetime
basedate <- as.POSIXct("1970-01-01 00:00:00", tz = "UTC")
properties <- properties %>%
mutate(time = basedate + (time/ 1000)) %>%
mutate(updated = basedate + (updated/1000))
# only accept values in the permitted range
properties <- properties %>%
filter(between(lon, -180, 180),
between(lat, -90, 90),
between(depth, 0, 1000),
between(mag, -1, 10))
# # convert metadata info generated int datetime
# metadata$generated <- basedate + (metadata$generated/1000)
# drop NA for mandatory fields
properties <- properties %>%
drop_na(mag, place, time, updated, type, lon, lat, code)
# # return list with prepared data
# list(properties_df = properties, metadata_obj = metadata, bbox_obj = bbox)
return(properties)
}
# create variables for different periodes
past_hours <- "https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/all_hour.geojson"
past_day <- "https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/all_day.geojson"
past_week <- "https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/all_week.geojson"
past_month <- "https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/all_month.geojson"
df <- pipeline(past_day)
View(df)
View(df)
str(df)
# filter for all mag >=5
properties <- properties %>%
filter(mag >= 5)
